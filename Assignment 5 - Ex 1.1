import numpy as np
import matplotlib.pyplot as plt

def ls_best_fit (x, y):
    
    x_mean = np.mean(x)
    y_mean = np.mean(y)
    top = (x - x_mean)*(y - y_mean)
    bottom = (x - x_mean)**2
    sum_top = np.sum(top)
    sum_bottom = np.sum(bottom)
    m = sum_top/sum_bottom

    c = y_mean - m*x_mean

    return (m, c)

x_raw = np.array([9.3, 7.0, 8.6, 6.7, 5.5, 9.0, 7.3, 7.4, 8.3, 7.7])
x = x_raw**2
y = np.array([1500, 700, 1200, 800, 450, 1200, 850, 900, 1000, 800])

m, c = ls_best_fit(x, y)
line = m*x + c
plt.plot(x, y, 'o', color='red')
plt.plot(x, line, '-', linewidth=1, color='black')
plt.xlabel('radius')
plt.ylabel('mass')

rad_theor = np.linspace(30, 90, 100)
m_theor = 1*(np.pi)*(rad_theor)*5
plt.plot(rad_theor, m_theor, '--', linewidth=1, color='blue')

print('Estimate of pi EXPLAIN: ', m/(1*5))